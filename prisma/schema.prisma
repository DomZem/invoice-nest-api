generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(50)
  lastName  String   @db.VarChar(50)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  avatar    String

  invoices Invoice[]
}

model Address {
  id         Int    @id @default(autoincrement())
  streetName String @db.VarChar(255)
  city       String @db.VarChar(100)
  postCode   String @db.VarChar(20)
  country    String @db.VarChar(100)

  invoicesFrom Invoice[] @relation("billFromAddress")
  invoicesTo   Invoice[] @relation("billToAddress")
}

model Invoice {
  id                 Int            @id @default(autoincrement())
  mark               String         @unique @db.VarChar(25)
  clientName         String         @db.VarChar(50)
  clientEmail        String
  date               DateTime       @db.Date
  status             INVOICE_STATUS @default(DRAFT)
  paymentTerm        PAYMENT_TERM   @default(NET_30)
  projectDescription String         @db.VarChar(100)

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  billFromAddress   Address @relation("billFromAddress", fields: [billFromAddressId], references: [id])
  billFromAddressId Int

  billToAddress   Address @relation("billToAddress", fields: [billToAddressId], references: [id])
  billToAddressId Int

  items Item[]
}

enum PAYMENT_TERM {
  NET_1
  NET_7
  NET_14
  NET_30
}

enum INVOICE_STATUS {
  DRAFT
  PENDING
  PAID
}

model Item {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(100)
  price    Float
  quantity Int

  invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId Int
}
